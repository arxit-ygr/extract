name: build-extract-actions
run-name: Building Extract after push by ${{ github.actor }}
on: [push]
jobs:
    build-extract:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '17'
                  cache: maven
            - run: mvn -q package -DskipTests=true --batch-mode
            - name: Upload artifact for deployment job
              uses: actions/upload-artifact@v3
              with:
                  name: java-app
                  path: '/home/runner/work/extract/extract/extract/target/*.war'

    test-extract:
        needs: build-extract
        runs-on: ubuntu-latest
        steps:
             - uses: actions/checkout@v3
             - uses: actions/setup-java@v3
               with:
                   distribution: 'temurin'
                   java-version: '17'
                   cache: maven
             - uses: browser-actions/setup-chrome@v1
             - name: Download artifact generated in build job
               uses: actions/download-artifact@v3
               with:
                   name: java-app
                   path: /tmp/extract.war                   
             - name: Display structure of downloaded files
               run: ls -R
               working-directory: /tmp
             - uses: isbang/compose-action@v1.5.0
               with:
                   compose-file: "./docker-compose-test.yaml"
                   services: |
                       pgsql
                       tomcat
                       mailhog
                       update_db_on_start
                   
             - name: Execute unit tests
               run: mvn -q test -Punit-tests --batch-mode --fail-at-end
             - name: Execute integration tests
               run: mvn -q verify -Pintegration-tests --batch-mode
             - name: Wait on server start
               uses: iFaxity/wait-on-action@v1.1.0
               with:
                   resource: http://localhost:8080/
                   interval: 5000
                   timeout: 150000
                   verbose: true
             - name: Wait on application deployment
               uses: iFaxity/wait-on-action@v1.1.0
               with:
                   resource: http://localhost:8080/extract/login
                   interval: 5000
                   timeout: 150000
                   verbose: true
             - name: Execute functional tests
               run: mvn -q verify -Pfunctional-tests --batch-mode
            # - name: "Publishes test results"
            #    if: success() || failure()
            #    uses: scacap/action-surefire-report@v1
